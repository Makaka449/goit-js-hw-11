{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["export function searchImages(searchWord, myGallery) {\n    const BASE_URL = \"https://pixabay.com/api/\";\n    const params = new URLSearchParams({\n        key: '43249627-6464a1b02c37cf8fbedd51288',\n        q: searchWord, \n        image_type: \"photo\",\n        orientation: \"horizontal\",\n        safesearch: true,\n    });\n\n    return fetch(`${BASE_URL}?${params}`)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error('Failed to fetch images');\n            }\n            return response.json();\n        })\n        .catch(error => {\n            throw new Error('Failed to fetch images');\n        });\n}","export function renderGallery(receivedObject) {\n    const neccesaryArray = receivedObject.hits;\n    return neccesaryArray\n        .map(\n        ({\n            webformatURL,\n            largeImageURL,\n            tags,\n            likes,\n            views,\n            comments,\n            downloads,\n        }) => `\n            <li class=\"card\">\n                <div>\n                    <a href=\"${largeImageURL}\">\n                        <img src=\"${webformatURL}\" alt=\"${tags}\" class=\"picture\"/>\n                    </a>\n                </div>\n                <ul class='descriptions'>\n                    <li class='descriptions_item'>\n                        <span>Likes</span>\n                        <span>${likes}</span>\n                    </li>\n                    <li class='descriptions_item'>\n                        <span>Views</span>\n                        <span>${views}</span>\n                    </li>\n                    <li class='descriptions_item'>\n                        <span>Comments</span>\n                        <span>${comments}</span>\n                    </li>\n                    <li class='descriptions_item'>\n                        <span>Downloads</span>\n                        <span>${downloads}</span>\n                    </li>\n                </ul>\n            </li>`\n        )\n        .join('');\n    }\n    \n    ","import { searchImages } from './js/pixabay-api';\nimport { renderGallery } from './js/render-functions.js';\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nconst book = new SimpleLightbox('.list_gallery a');\n\nconst form = document.querySelector('.main_form');\nconst myGallery = document.querySelector('.list_gallery');\n\nconst loadEl = document.querySelector('.loader');\n\n\n\nform.addEventListener(\"submit\", handlerForm);\nfunction handlerForm(event) {\n    event.preventDefault();\n    loadEl.classList.add('loading');\n    myGallery.innerHTML = '';\n    let searchWord = event.currentTarget.elements.inputElement.value;\n    event.currentTarget.elements.inputElement.value = \"\";  \n    searchImages(searchWord)\n        .then(data => {\n            if (data.total == 0) {\n                iziToast.show({\n                    title: 'Ops.',\n                    titleColor: 'white',\n                    message:\n                        'Sorry, there are no images matching your search query. Please try again!',\n                    messageColor: 'white',\n                    color: 'red',\n                    position: 'topCenter',\n                    timeout: '5000',\n                });\n                return 0;\n            } else {\n                myGallery.insertAdjacentHTML('beforeend', renderGallery(data));\n                book.refresh();\n            }\n        })\n        .catch(error => {\n            iziToast.show({\n                title: 'Ops.',\n                titleColor: 'white',\n                message: error,\n                messageColor: 'white',\n                color: 'red',\n                position: 'topCenter',\n                timeout: '5000',\n            });\n        })\n        .finally(() => { \n            loadEl.classList.remove('loading')\n        });\n}\n\n\n\n\n"],"names":["searchImages","searchWord","myGallery","BASE_URL","params","response","error","renderGallery","receivedObject","webformatURL","largeImageURL","tags","likes","views","comments","downloads","book","SimpleLightbox","form","loadEl","handlerForm","event","data","iziToast"],"mappings":"6vBAAO,SAASA,EAAaC,EAAYC,EAAW,CAChD,MAAMC,EAAW,2BACXC,EAAS,IAAI,gBAAgB,CAC/B,IAAK,qCACL,EAAGH,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACpB,CAAK,EAED,OAAO,MAAM,GAAGE,CAAQ,IAAIC,CAAM,EAAE,EAC/B,KAAKC,GAAY,CACd,GAAI,CAACA,EAAS,GACV,MAAM,IAAI,MAAM,wBAAwB,EAE5C,OAAOA,EAAS,MAC5B,CAAS,EACA,MAAMC,GAAS,CACZ,MAAM,IAAI,MAAM,wBAAwB,CACpD,CAAS,CACT,CCpBO,SAASC,EAAcC,EAAgB,CAE1C,OADuBA,EAAe,KAEjC,IACD,CAAC,CACG,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACZ,IAAc;AAAA;AAAA;AAAA,+BAGiBL,CAAa;AAAA,oCACRD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAM9BC,CAAK;AAAA;AAAA;AAAA;AAAA,gCAILC,CAAK;AAAA;AAAA;AAAA;AAAA,gCAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,gCAIRC,CAAS;AAAA;AAAA;AAAA,kBAIhC,EACA,KAAK,EAAE,CAChB,CCjCA,MAAMC,EAAO,IAAIC,EAAe,iBAAiB,EAE3CC,EAAO,SAAS,cAAc,YAAY,EAC1ChB,EAAY,SAAS,cAAc,eAAe,EAElDiB,EAAS,SAAS,cAAc,SAAS,EAI/CD,EAAK,iBAAiB,SAAUE,CAAW,EAC3C,SAASA,EAAYC,EAAO,CACxBA,EAAM,eAAc,EACpBF,EAAO,UAAU,IAAI,SAAS,EAC9BjB,EAAU,UAAY,GACtB,IAAID,EAAaoB,EAAM,cAAc,SAAS,aAAa,MAC3DA,EAAM,cAAc,SAAS,aAAa,MAAQ,GAClDrB,EAAaC,CAAU,EAClB,KAAKqB,GAAQ,CACV,GAAIA,EAAK,OAAS,EACd,OAAAC,EAAS,KAAK,CACV,MAAO,OACP,WAAY,QACZ,QACI,2EACJ,aAAc,QACd,MAAO,MACP,SAAU,YACV,QAAS,MAC7B,CAAiB,EACM,EAEPrB,EAAU,mBAAmB,YAAaK,EAAce,CAAI,CAAC,EAC7DN,EAAK,QAAO,CAE5B,CAAS,EACA,MAAMV,GAAS,CACZiB,EAAS,KAAK,CACV,MAAO,OACP,WAAY,QACZ,QAASjB,EACT,aAAc,QACd,MAAO,MACP,SAAU,YACV,QAAS,MACzB,CAAa,CACb,CAAS,EACA,QAAQ,IAAM,CACXa,EAAO,UAAU,OAAO,SAAS,CAC7C,CAAS,CACT"}